
# JDBC-Datenbank URI, Benutzer/Passwort setzen
spring.datasource.url=jdbc:h2:mem:factorydb
spring.datasource.username=h2
spring.datasource.password=h2
spring.datasource.driver-class-name=org.h2.Driver

# Automatisch Tabellen etc. aus Entities anlegen
spring.jpa.generate-ddl=true

# Bei jedem Anwendungsstart Datenbank droppen und frisch anlegen
# Im in-memory-Betrieb weniger interessant, spaeter mit DB-Dateien aber schon.
spring.jpa.hibernate.ddl-auto=create-drop

# SQL-Logging im Spring-Boot-Log aktivieren zu Guck- und Testzwecken
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type=INFO

# For Vincent
## JDBC Database URI, User/Password
#spring.datasource.url=jdbc:h2:file:/path/to/your/database/factorydb;DB_CLOSE_ON_EXIT=FALSE;AUTO_RECONNECT=TRUE
#spring.datasource.username=h2
#spring.datasource.password=h2
#spring.datasource.driver-class-name=org.h2.Driver
#
## Automatically create tables, etc., from Entities
#spring.jpa.generate-ddl=true
#
## Hibernate DDL Auto (none, update, create, create-drop, validate)
#spring.jpa.hibernate.ddl-auto=update
#
## SQL Logging in Spring Boot Log for inspection and testing
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type=INFO